import matplotlib.pyplot as plt
import numpy as np

# Calculate mean, median, and extrema
mean_value = df_filtered['vertex_count'].mean()
median_value = df_filtered['vertex_count'].median()
min_value = df_filtered['vertex_count'].min()
max_value = df_filtered['vertex_count'].max()

# Create a violin plot
plt.figure(figsize=(10, 6))
vp = plt.violinplot(df_filtered['vertex_count'], vert=False, showmeans=False, showmedians=False, showextrema=False)

# Adjust the x-axis and y-axis limits
plt.xlim(df_filtered['vertex_count'].min() - 1, df_filtered['vertex_count'].max() + 1)
plt.ylim(0.5, 2)  # Adjust the y-axis to provide more space for annotations

# Add annotations for mean, median, and extrema
plt.annotate(f'Mean: {mean_value:.2f}', xy=(mean_value, 1), xytext=(mean_value, 1.1),
             arrowprops=dict(facecolor='black', shrink=0.05), horizontalalignment='center')
plt.annotate(f'Median: {median_value}', xy=(median_value, 1), xytext=(median_value, 1.2),
             arrowprops=dict(facecolor='blue', shrink=0.05), horizontalalignment='center')
plt.annotate(f'Min: {min_value}', xy=(min_value, 1), xytext=(min_value, 1.3),
             arrowprops=dict(facecolor='green', shrink=0.05), horizontalalignment='center')
plt.annotate(f'Max: {max_value}', xy=(max_value, 1), xytext=(max_value, 1.4),
             arrowprops=dict(facecolor='red', shrink=0.05), horizontalalignment='center')

# Set title and labels
plt.title('Violin Plot of Vertex Counts (Filtered)')
plt.xlabel('Number of Vertices')

# Display the plot
plt.show()
